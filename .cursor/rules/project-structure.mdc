---
description: 
globs: 
alwaysApply: false
---
# Project Structure Guide

This project is team proeject of 6 people.
When adding a new feature, a new branch is created.
When merging, first merge with dev branch and test feature branch, to see everything works well.
Afterthat Dev branch is updated with new feature.
Team leader Merges main branch with dev branch and pushes.
The github is webhook connected with main branch to ec2 for backend build
The frontend is deployed to Vercel, and main branch and dev branch is deployed.
EC2 has jenkins and docker, building project backend as docker and runs it.
EC2 is ubuntu.


## Main Directories
- [frontend/](mdc:frontend) — Contains the Next.js frontend application. Entry point: [frontend/src/app/page.tsx](mdc:frontend/src/app/page.tsx)
- [backend/](mdc:backend) — Contains the backend code (Java or other backend technologies).

## Deployment
- [vercel.json](mdc:vercel.json) — Vercel deployment configuration for the frontend. Located at the project root to enable auto-deployment of the Next.js app in the frontend directory.

## Configuration & Ignore Files
- [.gitignore](mdc:.gitignore) — Root-level ignore file. Excludes IDE files, build artifacts, environment files, and other non-source files from version control.

## Additional Resources
- [docker-compose.yml](mdc:docker-compose.yml) — (If present) Used for local development and multi-service orchestration.
- [cursor_resource/](mdc:cursor_resource) — Local resources, ignored by default.

## Best Practices
- Keep deployment and configuration files at the project root for easy access and CI/CD compatibility.
- Use the root .gitignore to maintain a clean repository and avoid committing unnecessary files.

